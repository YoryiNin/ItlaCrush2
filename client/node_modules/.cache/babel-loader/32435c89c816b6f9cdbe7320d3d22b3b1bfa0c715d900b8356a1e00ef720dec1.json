{"ast":null,"code":"import { db } from \"./firebaseConfig\"; // Importar configuración de Firebase\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\n\n// Función para agregar declaraciones\nexport const agregarDeclaracion = async (autor, destinatario, publica, cuerpo) => {\n  try {\n    const docRef = await addDoc(collection(db, \"declaraciones\"), {\n      autor,\n      destinatario,\n      publica,\n      cuerpo,\n      fecha: new Date().toISOString()\n    });\n    console.log(\"Declaración agregada con ID: \", docRef.id);\n  } catch (error) {\n    console.error(\"Error al agregar declaración: \", error);\n  }\n};\n\n// Función para obtener declaraciones públicas\nexport const obtenerDeclaracionesPublicas = async () => {\n  try {\n    const q = query(collection(db, \"declaraciones\"), where(\"publica\", \"==\", true));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => doc.data());\n  } catch (error) {\n    console.error(\"Error al obtener declaraciones públicas: \", error);\n  }\n};\n\n// Función para obtener declaraciones privadas de un usuario autenticado\nexport const obtenerDeclaracionesPrivadas = async usuario => {\n  try {\n    const q = query(collection(db, \"declaraciones\"), where(\"autor\", \"==\", usuario));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => doc.data());\n  } catch (error) {\n    console.error(\"Error al obtener declaraciones privadas: \", error);\n  }\n};","map":{"version":3,"names":["db","collection","addDoc","getDocs","query","where","agregarDeclaracion","autor","destinatario","publica","cuerpo","docRef","fecha","Date","toISOString","console","log","id","error","obtenerDeclaracionesPublicas","q","querySnapshot","docs","map","doc","data","obtenerDeclaracionesPrivadas","usuario"],"sources":["C:/Users/Yntoxicboy/Desktop/my-react-node-project/client/src/firestoreService.js"],"sourcesContent":["import { db } from \"./firebaseConfig\"; // Importar configuración de Firebase\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n\r\n// Función para agregar declaraciones\r\nexport const agregarDeclaracion = async (autor, destinatario, publica, cuerpo) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"declaraciones\"), {\r\n      autor,\r\n      destinatario,\r\n      publica,\r\n      cuerpo,\r\n      fecha: new Date().toISOString(),\r\n    });\r\n    console.log(\"Declaración agregada con ID: \", docRef.id);\r\n  } catch (error) {\r\n    console.error(\"Error al agregar declaración: \", error);\r\n  }\r\n};\r\n\r\n// Función para obtener declaraciones públicas\r\nexport const obtenerDeclaracionesPublicas = async () => {\r\n  try {\r\n    const q = query(collection(db, \"declaraciones\"), where(\"publica\", \"==\", true));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((doc) => doc.data());\r\n  } catch (error) {\r\n    console.error(\"Error al obtener declaraciones públicas: \", error);\r\n  }\r\n};\r\n\r\n// Función para obtener declaraciones privadas de un usuario autenticado\r\nexport const obtenerDeclaracionesPrivadas = async (usuario) => {\r\n  try {\r\n    const q = query(collection(db, \"declaraciones\"), where(\"autor\", \"==\", usuario));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((doc) => doc.data());\r\n  } catch (error) {\r\n    console.error(\"Error al obtener declaraciones privadas: \", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB,CAAC,CAAC;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;;AAE9E;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,KAAK;EAChF,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMT,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,eAAe,CAAC,EAAE;MAC3DO,KAAK;MACLC,YAAY;MACZC,OAAO;MACPC,MAAM;MACNE,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAChC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,MAAM,CAACM,EAAE,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,4BAA4B,GAAG,MAAAA,CAAA,KAAY;EACtD,IAAI;IACF,MAAMC,CAAC,GAAGhB,KAAK,CAACH,UAAU,CAACD,EAAE,EAAE,eAAe,CAAC,EAAEK,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9E,MAAMgB,aAAa,GAAG,MAAMlB,OAAO,CAACiB,CAAC,CAAC;IACtC,OAAOC,aAAa,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;EACnE;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,4BAA4B,GAAG,MAAOC,OAAO,IAAK;EAC7D,IAAI;IACF,MAAMP,CAAC,GAAGhB,KAAK,CAACH,UAAU,CAACD,EAAE,EAAE,eAAe,CAAC,EAAEK,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEsB,OAAO,CAAC,CAAC;IAC/E,MAAMN,aAAa,GAAG,MAAMlB,OAAO,CAACiB,CAAC,CAAC;IACtC,OAAOC,aAAa,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;EACnE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}