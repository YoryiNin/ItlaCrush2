{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yntoxicboy\\\\Desktop\\\\my-react-node-project\\\\client\\\\src\\\\Declaraciones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebaseConfig\"; // Asegúrate de que esto apunta a tu configuración de Firebase\nimport { collection, query, where, onSnapshot, addDoc, getDocs } from \"firebase/firestore\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Declaraciones = () => {\n  _s();\n  const [declaracionesPublicas, setDeclaracionesPublicas] = useState([]);\n  const [filtroUsuario, setFiltroUsuario] = useState(\"\"); // Estado para almacenar el filtro por usuario\n  const [destinatariosList, setDestinatariosList] = useState([]); // Estado para almacenar la lista de destinatarios\n  const [declaracion, setDeclaracion] = useState(\"\"); // Estado para almacenar el cuerpo de la declaración\n  const [destinatario, setDestinatario] = useState(\"\"); // Estado para almacenar el destinatario seleccionado\n  const [isPublica, setIsPublica] = useState(true); // Estado para saber si la declaración es pública\n\n  useEffect(() => {\n    // Obtener todos los usuarios registrados para el combo box\n    const fetchUsuarios = async () => {\n      const q = query(collection(db, \"usuarios\"));\n      const querySnapshot = await getDocs(q);\n      const usuarios = [];\n      querySnapshot.forEach(doc => {\n        usuarios.push(doc.data().usuario); // Asegúrate de que cada documento tiene el campo 'usuario'\n      });\n      setDestinatariosList(usuarios);\n    };\n    fetchUsuarios();\n    const q = query(collection(db, \"declaraciones\"), where(\"publica\", \"in\", [true, false]) // Incluir tanto las públicas como las no públicas\n    );\n\n    // Escuchar los cambios en tiempo real\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const declaraciones = [];\n      querySnapshot.forEach(doc => {\n        declaraciones.push(doc.data());\n      });\n      setDeclaracionesPublicas(declaraciones);\n    });\n\n    // Limpiar el listener cuando el componente se desmonte\n    return () => unsubscribe();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!declaracion || !destinatario) {\n      alert(\"La declaración y el destinatario son obligatorios.\");\n      return;\n    }\n    try {\n      // Crear una nueva declaración\n      await addDoc(collection(db, \"declaraciones\"), {\n        autor: \"UsuarioEjemplo\",\n        // Reemplazar con el nombre del usuario actual\n        destinatario: destinatario === \"OTRO\" ? e.target.otherDestinatario.value : destinatario,\n        cuerpo: declaracion,\n        publica: isPublica,\n        fecha: new Date()\n      });\n      setDeclaracion(\"\"); // Limpiar el campo de declaración\n      setDestinatario(\"\"); // Limpiar el destinatario\n      setIsPublica(true); // Resetear el checkbox a público\n      alert(\"¡Declaración publicada exitosamente!\");\n    } catch (err) {\n      console.error(\"Error al publicar declaración:\", err);\n      alert(\"Hubo un error al publicar la declaración.\");\n    }\n  };\n\n  // Filtrar las declaraciones por el nombre de usuario\n  const declaracionesFiltradas = declaracionesPublicas.filter(declaracion => {\n    return declaracion.autor ? declaracion.autor.toLowerCase().includes(filtroUsuario.toLowerCase()) : true; // Si no hay autor, no lo filtra\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Declaraciones P\\xFAblicas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filtrar por nombre de usuario\",\n      value: filtroUsuario,\n      onChange: e => setFiltroUsuario(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"declaraciones-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: declaracionesFiltradas.map((declaracion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [declaracion.publica ? declaracion.autor || \"Anónimo\" : \"Anónimo\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), \" \", declaracion.cuerpo]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Publicar Declaraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Declaraci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: declaracion,\n          onChange: e => setDeclaracion(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Destinatario:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: destinatario,\n          onChange: e => setDestinatario(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un destinatario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), destinatariosList.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: usuario,\n            children: usuario\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"OTRO\",\n            children: \"Otro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), destinatario === \"OTRO\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nombre del destinatario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"otherDestinatario\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isPublica,\n            onChange: () => setIsPublica(!isPublica)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \"Declaraci\\xF3n p\\xFAblica\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Publicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Declaraciones, \"FodiehTfLNWB5NVm3DZXnV/pq2k=\");\n_c = Declaraciones;\nexport default Declaraciones;\nvar _c;\n$RefreshReg$(_c, \"Declaraciones\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","onSnapshot","addDoc","getDocs","jsxDEV","_jsxDEV","Declaraciones","_s","declaracionesPublicas","setDeclaracionesPublicas","filtroUsuario","setFiltroUsuario","destinatariosList","setDestinatariosList","declaracion","setDeclaracion","destinatario","setDestinatario","isPublica","setIsPublica","fetchUsuarios","q","querySnapshot","usuarios","forEach","doc","push","data","usuario","unsubscribe","declaraciones","handleSubmit","e","preventDefault","alert","autor","target","otherDestinatario","value","cuerpo","publica","fecha","Date","err","console","error","declaracionesFiltradas","filter","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","map","index","onSubmit","required","name","checked","_c","$RefreshReg$"],"sources":["C:/Users/Yntoxicboy/Desktop/my-react-node-project/client/src/Declaraciones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebaseConfig\"; // Asegúrate de que esto apunta a tu configuración de Firebase\r\nimport { collection, query, where, onSnapshot, addDoc, getDocs } from \"firebase/firestore\";\r\nimport './styles.css';\r\n\r\nconst Declaraciones = () => {\r\n  const [declaracionesPublicas, setDeclaracionesPublicas] = useState([]);\r\n  const [filtroUsuario, setFiltroUsuario] = useState(\"\"); // Estado para almacenar el filtro por usuario\r\n  const [destinatariosList, setDestinatariosList] = useState([]); // Estado para almacenar la lista de destinatarios\r\n  const [declaracion, setDeclaracion] = useState(\"\"); // Estado para almacenar el cuerpo de la declaración\r\n  const [destinatario, setDestinatario] = useState(\"\"); // Estado para almacenar el destinatario seleccionado\r\n  const [isPublica, setIsPublica] = useState(true); // Estado para saber si la declaración es pública\r\n\r\n  useEffect(() => {\r\n    // Obtener todos los usuarios registrados para el combo box\r\n    const fetchUsuarios = async () => {\r\n      const q = query(collection(db, \"usuarios\"));\r\n      const querySnapshot = await getDocs(q);\r\n      const usuarios = [];\r\n      querySnapshot.forEach((doc) => {\r\n        usuarios.push(doc.data().usuario); // Asegúrate de que cada documento tiene el campo 'usuario'\r\n      });\r\n      setDestinatariosList(usuarios);\r\n    };\r\n    fetchUsuarios();\r\n\r\n    const q = query(\r\n      collection(db, \"declaraciones\"),\r\n      where(\"publica\", \"in\", [true, false]) // Incluir tanto las públicas como las no públicas\r\n    );\r\n\r\n    // Escuchar los cambios en tiempo real\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const declaraciones = [];\r\n      querySnapshot.forEach((doc) => {\r\n        declaraciones.push(doc.data());\r\n      });\r\n      setDeclaracionesPublicas(declaraciones);\r\n    });\r\n\r\n    // Limpiar el listener cuando el componente se desmonte\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!declaracion || !destinatario) {\r\n      alert(\"La declaración y el destinatario son obligatorios.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Crear una nueva declaración\r\n      await addDoc(collection(db, \"declaraciones\"), {\r\n        autor: \"UsuarioEjemplo\", // Reemplazar con el nombre del usuario actual\r\n        destinatario: destinatario === \"OTRO\" ? e.target.otherDestinatario.value : destinatario,\r\n        cuerpo: declaracion,\r\n        publica: isPublica,\r\n        fecha: new Date(),\r\n      });\r\n      setDeclaracion(\"\"); // Limpiar el campo de declaración\r\n      setDestinatario(\"\"); // Limpiar el destinatario\r\n      setIsPublica(true); // Resetear el checkbox a público\r\n      alert(\"¡Declaración publicada exitosamente!\");\r\n    } catch (err) {\r\n      console.error(\"Error al publicar declaración:\", err);\r\n      alert(\"Hubo un error al publicar la declaración.\");\r\n    }\r\n  };\r\n\r\n  // Filtrar las declaraciones por el nombre de usuario\r\n  const declaracionesFiltradas = declaracionesPublicas.filter((declaracion) => {\r\n    return declaracion.autor\r\n      ? declaracion.autor.toLowerCase().includes(filtroUsuario.toLowerCase())\r\n      : true; // Si no hay autor, no lo filtra\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Declaraciones Públicas</h2>\r\n      \r\n      {/* Campo de filtro para el nombre de usuario */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Filtrar por nombre de usuario\"\r\n        value={filtroUsuario}\r\n        onChange={(e) => setFiltroUsuario(e.target.value)}\r\n      />\r\n\r\n      <div className=\"declaraciones-container\">\r\n        <ul>\r\n          {declaracionesFiltradas.map((declaracion, index) => (\r\n            <li key={index}>\r\n              <strong>{declaracion.publica ? declaracion.autor || \"Anónimo\" : \"Anónimo\"}:</strong>{\" \"}\r\n              {declaracion.cuerpo}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <h2>Publicar Declaración</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Declaración:</label>\r\n          <textarea\r\n            value={declaracion}\r\n            onChange={(e) => setDeclaracion(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Destinatario:</label>\r\n          <select\r\n            value={destinatario}\r\n            onChange={(e) => setDestinatario(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Selecciona un destinatario</option>\r\n            {destinatariosList.map((usuario, index) => (\r\n              <option key={index} value={usuario}>\r\n                {usuario}\r\n              </option>\r\n            ))}\r\n            <option value=\"OTRO\">Otro</option>\r\n          </select>\r\n\r\n          {destinatario === \"OTRO\" && (\r\n            <div>\r\n              <label>Nombre del destinatario:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"otherDestinatario\"\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isPublica}\r\n              onChange={() => setIsPublica(!isPublica)}\r\n            />\r\n            Declaración pública\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\">Publicar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Declaraciones;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}