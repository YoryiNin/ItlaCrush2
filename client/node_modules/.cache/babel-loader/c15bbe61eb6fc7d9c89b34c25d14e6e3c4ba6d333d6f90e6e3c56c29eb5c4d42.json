{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yntoxicboy\\\\Desktop\\\\my-react-node-project\\\\client\\\\src\\\\Declaraciones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth } from \"./firebaseConfig\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Declaraciones = () => {\n  _s();\n  const [declaraciones, setDeclaraciones] = useState([]);\n  const [usuarioAutenticado, setUsuarioAutenticado] = useState(false);\n\n  // Verificar si el usuario está autenticado\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setUsuarioAutenticado(!!user); // true si está autenticado, false si no\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Cargar las declaraciones desde Firestore\n  useEffect(() => {\n    const fetchDeclaraciones = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"declaraciones\"));\n        const mensajes = [];\n        querySnapshot.forEach(doc => {\n          mensajes.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setDeclaraciones(mensajes);\n      } catch (error) {\n        console.error(\"Error al obtener las declaraciones:\", error);\n      }\n    };\n    fetchDeclaraciones();\n  }, []);\n\n  // Filtrar las declaraciones según el estado de autenticación\n  const mensajesPublicos = declaraciones.filter(mensaje => mensaje.publica || mensaje.autor === \"Anónimo\");\n  const mensajesPrivados = usuarioAutenticado ? declaraciones.filter(mensaje => !mensaje.publica) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"declaraciones-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mensajes P\\xFAblicos y An\\xF3nimos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), mensajesPublicos.length > 0 ? mensajesPublicos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensaje\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"De:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this), \" \", mensaje.autor || \"Anónimo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Para:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this), \" \", mensaje.destinatario]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mensaje.cuerpo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, mensaje.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay mensajes p\\xFAblicos o an\\xF3nimos disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), usuarioAutenticado && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mensajes Privados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), mensajesPrivados.length > 0 ? mensajesPrivados.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mensaje\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }, this), \" \", mensaje.autor || \"Anónimo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Para:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }, this), \" \", mensaje.destinatario]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mensaje.cuerpo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, mensaje.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay mensajes privados disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !usuarioAutenticado && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-prompt\",\n      children: \"Inicia sesi\\xF3n para ver los mensajes privados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Declaraciones, \"efBYVLr7PSzBH377aFu5MxIhHbg=\");\n_c = Declaraciones;\nexport default Declaraciones;\nvar _c;\n$RefreshReg$(_c, \"Declaraciones\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","collection","getDocs","onAuthStateChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","Declaraciones","_s","declaraciones","setDeclaraciones","usuarioAutenticado","setUsuarioAutenticado","unsubscribe","user","fetchDeclaraciones","querySnapshot","mensajes","forEach","doc","push","id","data","error","console","mensajesPublicos","filter","mensaje","publica","autor","mensajesPrivados","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","destinatario","cuerpo","_c","$RefreshReg$"],"sources":["C:/Users/Yntoxicboy/Desktop/my-react-node-project/client/src/Declaraciones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db, auth } from \"./firebaseConfig\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst Declaraciones = () => {\r\n  const [declaraciones, setDeclaraciones] = useState([]);\r\n  const [usuarioAutenticado, setUsuarioAutenticado] = useState(false);\r\n\r\n  // Verificar si el usuario está autenticado\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setUsuarioAutenticado(!!user); // true si está autenticado, false si no\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Cargar las declaraciones desde Firestore\r\n  useEffect(() => {\r\n    const fetchDeclaraciones = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"declaraciones\"));\r\n        const mensajes = [];\r\n        querySnapshot.forEach((doc) => {\r\n          mensajes.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setDeclaraciones(mensajes);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener las declaraciones:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDeclaraciones();\r\n  }, []);\r\n\r\n  // Filtrar las declaraciones según el estado de autenticación\r\n  const mensajesPublicos = declaraciones.filter(\r\n    (mensaje) => mensaje.publica || mensaje.autor === \"Anónimo\"\r\n  );\r\n  const mensajesPrivados = usuarioAutenticado\r\n    ? declaraciones.filter((mensaje) => !mensaje.publica)\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"declaraciones-container\">\r\n      <h2>Mensajes Públicos y Anónimos</h2>\r\n      {mensajesPublicos.length > 0 ? (\r\n        mensajesPublicos.map((mensaje) => (\r\n          <div key={mensaje.id} className=\"mensaje\">\r\n            <p><strong>De:</strong> {mensaje.autor || \"Anónimo\"}</p>\r\n            <p><strong>Para:</strong> {mensaje.destinatario}</p>\r\n            <p>{mensaje.cuerpo}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No hay mensajes públicos o anónimos disponibles.</p>\r\n      )}\r\n\r\n      {usuarioAutenticado && (\r\n        <>\r\n          <h2>Mensajes Privados</h2>\r\n          {mensajesPrivados.length > 0 ? (\r\n            mensajesPrivados.map((mensaje) => (\r\n              <div key={mensaje.id} className=\"mensaje\">\r\n                <p><strong>De:</strong> {mensaje.autor || \"Anónimo\"}</p>\r\n                <p><strong>Para:</strong> {mensaje.destinatario}</p>\r\n                <p>{mensaje.cuerpo}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No hay mensajes privados disponibles.</p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {!usuarioAutenticado && (\r\n        <p className=\"login-prompt\">\r\n          Inicia sesión para ver los mensajes privados.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Declaraciones;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}